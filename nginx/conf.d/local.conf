# React 전용 Nginx와 API 서버들을 프록시할 upstream 블록
upstream frontend {
    server react-nginx:80;  # React 전용 Nginx 컨테이너 이름과 포트
}

upstream auth-server {
    server auth-server:8080;  # 인증 서버 컨테이너 이름과 포트
}

upstream api-server {
    server api-server:8080;  # 리소스 서버 컨테이너 이름과 포트
}

server {
    listen 80;

    # React 앱 경로를 처리 (루트로 라우팅)
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 인증 서버 요청
    location /auth {
        proxy_pass http://auth-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # /login 요청에 대해 GET과 POST 요청을 구분하여 라우팅
    location /login {
        if ($request_method = GET) {
            proxy_pass http://frontend;
        }

        if ($request_method = POST) {
            proxy_pass http://auth-server;
        }
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 로그아웃 요청 처리
    location /logout {
        proxy_pass http://auth-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 리소스 서버 요청
    location /api {
        proxy_pass http://api-server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
